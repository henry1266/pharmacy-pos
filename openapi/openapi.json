{
  "openapi": "3.0.3",
  "info": {
    "title": "Pharmacy POS API",
    "version": "1.0.0",
    "description": "Generated from shared Zod schemas (SSOT)"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "tags": [
    {
      "name": "Sales",
      "description": "Sales endpoints"
    },
    {
      "name": "Customers",
      "description": "Customer management endpoints"
    }
  ],
  "paths": {
    "/sales": {
      "get": {
        "summary": "List sales with optional search",
        "operationId": "listSales",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "wildcardSearch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Sales list",
                    "value": {
                      "success": true,
                      "message": "OK",
                      "data": [
                        {
                          "_id": "64f0a1b2c3d4e5f678901234",
                          "saleNumber": "20250101001",
                          "totalAmount": 1234.56
                        }
                      ],
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a sale",
        "operationId": "createSale",
        "tags": [
          "Sales"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "created": {
                    "summary": "Created",
                    "value": {
                      "success": true,
                      "message": "Created",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "saleNumber": "20250101001",
                        "totalAmount": 100
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sales/{id}": {
      "get": {
        "summary": "Get sale by ID",
        "operationId": "getSaleById",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Single sale",
                    "value": {
                      "success": true,
                      "message": "OK",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "saleNumber": "20250101001",
                        "totalAmount": 123.45
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a sale",
        "operationId": "updateSale",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "updated": {
                    "summary": "Updated",
                    "value": {
                      "success": true,
                      "message": "Updated",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "saleNumber": "20250101001"
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a sale",
        "operationId": "deleteSale",
        "tags": [
          "Sales"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "deleted": {
                    "summary": "Deleted",
                    "value": {
                      "success": true,
                      "message": "Deleted",
                      "data": {
                        "id": "64f0a1b2c3d4e5f678901234"
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "List customers",
        "operationId": "listCustomers",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "customers": {
                    "summary": "Customer list",
                    "value": {
                      "success": true,
                      "message": "OK",
                      "data": [
                        {
                          "_id": "64f0a1b2c3d4e5f678901234",
                          "code": "C00001",
                          "name": "John Doe",
                          "membershipLevel": "regular"
                        }
                      ],
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a customer",
        "operationId": "createCustomer",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "created": {
                    "summary": "Created",
                    "value": {
                      "success": true,
                      "message": "Created",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "code": "C00001",
                        "name": "John Doe"
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/quick": {
      "post": {
        "summary": "Quick create or update customer",
        "operationId": "quickCreateCustomer",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQuickCreateRequest"
              },
              "examples": {
                "example": {
                  "summary": "Quick create payload",
                  "value": {
                    "name": "鄭暄瀚",
                    "birthdate": "1995/06/19",
                    "idCardNumber": "Hxxxxxxxxx",
                    "notes": "測試備註"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "birthdate",
                  "idCardNumber"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "客戶姓名",
                    "example": "鄭暄瀚"
                  },
                  "birthdate": {
                    "type": "string",
                    "description": "生日 (YYYY/MM/DD)",
                    "example": "1995/06/19"
                  },
                  "idCardNumber": {
                    "type": "string",
                    "description": "身分證字號",
                    "example": "Hxxxxxxxxx"
                  },
                  "notes": {
                    "type": "string",
                    "description": "備註",
                    "example": "測試備註"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Customer upserted",
                    "value": {
                      "success": true,
                      "message": "Customer saved successfully",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "name": "王小明",
                        "idCardNumber": "H201627336"
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "summary": "Get customer by ID",
        "operationId": "getCustomerById",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "customer": {
                    "summary": "Customer",
                    "value": {
                      "success": true,
                      "message": "OK",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "code": "C00001",
                        "name": "John Doe"
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a customer",
        "operationId": "updateCustomer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "updated": {
                    "summary": "Updated",
                    "value": {
                      "success": true,
                      "message": "Updated",
                      "data": {
                        "_id": "64f0a1b2c3d4e5f678901234",
                        "code": "C00001",
                        "name": "John Doe",
                        "membershipLevel": "gold"
                      },
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a customer",
        "operationId": "deleteCustomer",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "examples": {
                  "deleted": {
                    "summary": "Deleted",
                    "value": {
                      "success": true,
                      "message": "Deleted",
                      "data": null,
                      "timestamp": "2025-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {},
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "param": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                }
              },
              "required": [
                "msg"
              ]
            }
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          },
          "statusCode": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "SaleItem": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24
          },
          "quantity": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 999999
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "maximum": 999999.99
          },
          "unitPrice": {
            "type": "number",
            "minimum": 0,
            "maximum": 999999.99
          },
          "discount": {
            "type": "number",
            "minimum": 0,
            "maximum": 999999.99
          },
          "subtotal": {
            "type": "number",
            "minimum": 0,
            "maximum": 9999999.99
          },
          "notes": {
            "type": "string",
            "maxLength": 500
          }
        },
        "required": [
          "product",
          "quantity",
          "price",
          "subtotal"
        ],
        "additionalProperties": false
      },
      "SaleCreateRequest": {
        "type": "object",
        "properties": {
          "saleNumber": {
            "type": "string"
          },
          "customer": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/definitions/SaleCreateRequest/properties/customer"
                },
                "quantity": {
                  "type": "number",
                  "minimum": 0.001,
                  "maximum": 999999
                },
                "price": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999.99
                },
                "unitPrice": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999.99
                },
                "discount": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999.99
                },
                "subtotal": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 9999999.99
                },
                "notes": {
                  "type": "string",
                  "maxLength": 500
                }
              },
              "required": [
                "product",
                "quantity",
                "price",
                "subtotal"
              ],
              "additionalProperties": false
            },
            "minItems": 1
          },
          "totalAmount": {
            "type": "number",
            "minimum": 0,
            "maximum": 9999999.99
          },
          "discount": {
            "type": "number",
            "minimum": 0,
            "maximum": 9999999.99
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "credit_card",
              "debit_card",
              "transfer",
              "mobile_payment",
              "other"
            ]
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "paid",
              "pending",
              "partial",
              "cancelled"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "completed",
              "pending",
              "cancelled"
            ]
          },
          "notes": {
            "type": "string",
            "maxLength": 1000
          },
          "note": {
            "type": "string",
            "maxLength": 1000
          },
          "cashier": {
            "$ref": "#/definitions/SaleCreateRequest/properties/customer"
          },
          "createdBy": {
            "$ref": "#/definitions/SaleCreateRequest/properties/customer"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "items",
          "totalAmount",
          "paymentMethod"
        ],
        "additionalProperties": false
      },
      "SaleUpdateRequest": {
        "type": "object",
        "properties": {
          "saleNumber": {
            "type": "string"
          },
          "customer": {
            "type": "string",
            "minLength": 24,
            "maxLength": 24
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/definitions/SaleUpdateRequest/properties/customer"
                },
                "quantity": {
                  "type": "number",
                  "minimum": 0.001,
                  "maximum": 999999
                },
                "price": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999.99
                },
                "unitPrice": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999.99
                },
                "discount": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999.99
                },
                "subtotal": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 9999999.99
                },
                "notes": {
                  "type": "string",
                  "maxLength": 500
                }
              },
              "required": [
                "product",
                "quantity",
                "price",
                "subtotal"
              ],
              "additionalProperties": false
            },
            "minItems": 1
          },
          "totalAmount": {
            "type": "number",
            "minimum": 0,
            "maximum": 9999999.99
          },
          "discount": {
            "type": "number",
            "minimum": 0,
            "maximum": 9999999.99
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "credit_card",
              "debit_card",
              "transfer",
              "mobile_payment",
              "other"
            ]
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "paid",
              "pending",
              "partial",
              "cancelled"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "completed",
              "pending",
              "cancelled"
            ]
          },
          "notes": {
            "type": "string",
            "maxLength": 1000
          },
          "note": {
            "type": "string",
            "maxLength": 1000
          },
          "cashier": {
            "$ref": "#/definitions/SaleUpdateRequest/properties/customer"
          },
          "createdBy": {
            "$ref": "#/definitions/SaleUpdateRequest/properties/customer"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "_id": {
            "$ref": "#/definitions/SaleUpdateRequest/properties/customer"
          }
        },
        "required": [
          "_id"
        ],
        "additionalProperties": false
      },
      "SaleSearchQuery": {
        "type": "object",
        "properties": {
          "saleNumber": {
            "type": "string"
          },
          "customer": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "endDate": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "credit_card",
              "debit_card",
              "transfer",
              "mobile_payment",
              "other"
            ]
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "paid",
              "pending",
              "partial",
              "cancelled"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "completed",
              "pending",
              "cancelled"
            ]
          },
          "minAmount": {
            "type": "number",
            "minimum": 0
          },
          "maxAmount": {
            "type": "number",
            "minimum": 0
          },
          "cashier": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "code": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\d\\s\\-+()]+$",
            "minLength": 8,
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
            "maxLength": 254
          },
          "address": {
            "type": "string"
          },
          "idCardNumber": {
            "type": "string",
            "pattern": "^[A-Z][12]\\d{8}$"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "other"
            ]
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "membershipLevel": {
            "type": "string",
            "enum": [
              "regular",
              "silver",
              "gold",
              "platinum"
            ]
          },
          "medicalHistory": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "CustomerCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "code": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\d\\s\\-+()]+$",
            "minLength": 8,
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
            "maxLength": 254
          },
          "address": {
            "type": "string"
          },
          "idCardNumber": {
            "type": "string",
            "pattern": "^[A-Z][12]\\d{8}$"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "other"
            ]
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "membershipLevel": {
            "type": "string",
            "enum": [
              "regular",
              "silver",
              "gold",
              "platinum"
            ]
          },
          "medicalHistory": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "CustomerUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "code": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\d\\s\\-+()]+$",
            "minLength": 8,
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "pattern": "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
            "maxLength": 254
          },
          "address": {
            "type": "string"
          },
          "idCardNumber": {
            "type": "string",
            "pattern": "^[A-Z][12]\\d{8}$"
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "other"
            ]
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "membershipLevel": {
            "type": "string",
            "enum": [
              "regular",
              "silver",
              "gold",
              "platinum"
            ]
          },
          "medicalHistory": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerSearchQuery": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          },
          "wildcardSearch": {
            "type": "string"
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 100
          },
          "sortBy": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "additionalProperties": false
      },
      "CustomerQuickCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "birthdate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "idCardNumber": {
            "type": "string",
            "pattern": "^[A-Z][12]\\d{8}$"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "birthdate",
          "idCardNumber"
        ],
        "additionalProperties": false
      }
    }
  }
}